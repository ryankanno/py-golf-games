# SPDX-License-Identifier: MIT

[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-fancy-pypi-readme>=22.8.0"]
build-backend = "hatchling.build"

[project]
name = "py-golf-games"
version = "0.0.0"
description = "Simulation of golf games"
readme = "README.md"
requires-python = ">=3.10,<4"
license = {file = "LICENSE"}
authors = [{name = "Ryan", email = "ryankanno@localkinegrinds.com"}]
maintainers = [{name = "Ryan", email = "ryankanno@localkinegrinds.com"}]
keywords = ["golf"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
]
dependencies = [
    "structlog>=24.4.0",
]

[project.urls]
Repository = "https://github.com/ryankanno/py-golf-games"
Issues = "https://github.com/ryankanno/py-golf-games/issues"

[project.optional-dependencies]
docs = [
    "furo>=2024.8.6",
    "myst-parser[linkify]>=4.0.0",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
]

[tool.uv]
dev-dependencies = [
    "black>=24.10.0",
    "dunamai>=1.22.0",
    "hypothesis>=6.115.3",
    "ipython>=8.28.0",
    "isort>=5.13.2",
    "konch>=4.5.0",
    "mutmut>=3.1.0",
    "mypy>=1.13.0",
    "pdbpp>=0.10.3",
    "pre-commit>=4.0.1",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.15.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.7.0",
    "tox>=4.23.2",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = false
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false

[tool.black]
line-length = 79
skip-string-normalization = true
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
     | \.eggs
     | \.git
     | \.hg
     | \.mypy_cache
     | \.nox
     | \.tox
     | \.venv
     | venv
     | \.svn
     | _build
     | buck-out
     | build
     | dist
     | __pypackages__
     | \{\{cookiecutter\.package_name\}\}\/tests
 )/
)
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -n auto"

[tool.coverage.run]
parallel = true
branch = true
source = ["py_golf_games"]
omit = [
    "*/python?.?/*",
    "*/tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "import",
]
show_missing = true
skip_covered = false

[tool.isort]
force_grid_wrap = 0
force_single_line = true
include_trailing_comma = true
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true
known_third_party = []
default_section = "THIRDPARTY"
known_first_party = "py_golf_games"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["py_golf_games", "tests"]

[tool.ruff]
line-length = 79

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
preview = true
select = [
    "A",    # python builtins being used as variables or parameters
    "ANN",  # annotations
    "ARG",  # unused function arguments
    "B",    # common design problems (flake8-bugbear)
    "BLE",  # blind exception catching
    "C4",   # proper comprehensions
    "C9",   # mccabe complexity
    "D417", # missing args in docstrings
    "DTZ",  # unsafe naive datetime use (flake8-datetimez)
    "E",    # code style conventions (pycodestyle)
    "EM",   # raw literals inside exception (flake8-errmsg)
    "F",    # python source code for errors (pyflakes)
    "FIX",  # temporary developer notes (flake8-fixme)
    "FURB", # code improvements (refurb)
    "G",    # logging string formatting (flake8-logging-format)
    "LOG",  # logging module usage (flake8-logging)
    "PERF", # performance anti-patterns (perflint)
    "PGH",  # pygrep hooks
    "PIE",  # misc (flake8-pie)
    "PL",   # code errors and smells (pylint)
    "PT",   # common pytest issues
    "PTH",  # pathlib usage
    "RET",  # return statements (flake8-return)
    "RSE",  # exception raise statements (flake8-raise)
    "S",    # security testing (flake8-bandit)
    "SIM",  # code simplicity (flake8-simplify)
    "T20",  # for any print statements
    "TRY",  # exception handling anti-patterns (tryceratops)
    "UP",   # outdated syntax (pyupgrade)
    "W",    # code style conventions (pycodestyle)
]
ignore = [
    "ANN101",
    "ANN102",
]

[tool.ruff.lint.per-file-ignores]
"tests/test_*.py" = ["S101"]
"py_golf_games/simulation/generator.py" = ["S311"]
"py_golf_games/simulation/simulator.py" = ["T201"]
